// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
// Version: 2021.2
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module hash_controller_pass (
        m_axi_rd_0_AWVALID,
        m_axi_rd_0_AWREADY,
        m_axi_rd_0_AWADDR,
        m_axi_rd_0_AWID,
        m_axi_rd_0_AWLEN,
        m_axi_rd_0_AWSIZE,
        m_axi_rd_0_AWBURST,
        m_axi_rd_0_AWLOCK,
        m_axi_rd_0_AWCACHE,
        m_axi_rd_0_AWPROT,
        m_axi_rd_0_AWQOS,
        m_axi_rd_0_AWREGION,
        m_axi_rd_0_AWUSER,
        m_axi_rd_0_WVALID,
        m_axi_rd_0_WREADY,
        m_axi_rd_0_WDATA,
        m_axi_rd_0_WSTRB,
        m_axi_rd_0_WLAST,
        m_axi_rd_0_WID,
        m_axi_rd_0_WUSER,
        m_axi_rd_0_ARVALID,
        m_axi_rd_0_ARREADY,
        m_axi_rd_0_ARADDR,
        m_axi_rd_0_ARID,
        m_axi_rd_0_ARLEN,
        m_axi_rd_0_ARSIZE,
        m_axi_rd_0_ARBURST,
        m_axi_rd_0_ARLOCK,
        m_axi_rd_0_ARCACHE,
        m_axi_rd_0_ARPROT,
        m_axi_rd_0_ARQOS,
        m_axi_rd_0_ARREGION,
        m_axi_rd_0_ARUSER,
        m_axi_rd_0_RVALID,
        m_axi_rd_0_RREADY,
        m_axi_rd_0_RDATA,
        m_axi_rd_0_RLAST,
        m_axi_rd_0_RID,
        m_axi_rd_0_RFIFONUM,
        m_axi_rd_0_RUSER,
        m_axi_rd_0_RRESP,
        m_axi_rd_0_BVALID,
        m_axi_rd_0_BREADY,
        m_axi_rd_0_BRESP,
        m_axi_rd_0_BID,
        m_axi_rd_0_BUSER,
        rd_01,
        m_axi_rd_1_AWVALID,
        m_axi_rd_1_AWREADY,
        m_axi_rd_1_AWADDR,
        m_axi_rd_1_AWID,
        m_axi_rd_1_AWLEN,
        m_axi_rd_1_AWSIZE,
        m_axi_rd_1_AWBURST,
        m_axi_rd_1_AWLOCK,
        m_axi_rd_1_AWCACHE,
        m_axi_rd_1_AWPROT,
        m_axi_rd_1_AWQOS,
        m_axi_rd_1_AWREGION,
        m_axi_rd_1_AWUSER,
        m_axi_rd_1_WVALID,
        m_axi_rd_1_WREADY,
        m_axi_rd_1_WDATA,
        m_axi_rd_1_WSTRB,
        m_axi_rd_1_WLAST,
        m_axi_rd_1_WID,
        m_axi_rd_1_WUSER,
        m_axi_rd_1_ARVALID,
        m_axi_rd_1_ARREADY,
        m_axi_rd_1_ARADDR,
        m_axi_rd_1_ARID,
        m_axi_rd_1_ARLEN,
        m_axi_rd_1_ARSIZE,
        m_axi_rd_1_ARBURST,
        m_axi_rd_1_ARLOCK,
        m_axi_rd_1_ARCACHE,
        m_axi_rd_1_ARPROT,
        m_axi_rd_1_ARQOS,
        m_axi_rd_1_ARREGION,
        m_axi_rd_1_ARUSER,
        m_axi_rd_1_RVALID,
        m_axi_rd_1_RREADY,
        m_axi_rd_1_RDATA,
        m_axi_rd_1_RLAST,
        m_axi_rd_1_RID,
        m_axi_rd_1_RFIFONUM,
        m_axi_rd_1_RUSER,
        m_axi_rd_1_RRESP,
        m_axi_rd_1_BVALID,
        m_axi_rd_1_BREADY,
        m_axi_rd_1_BRESP,
        m_axi_rd_1_BID,
        m_axi_rd_1_BUSER,
        rd_12,
        m_axi_wr_0_AWVALID,
        m_axi_wr_0_AWREADY,
        m_axi_wr_0_AWADDR,
        m_axi_wr_0_AWID,
        m_axi_wr_0_AWLEN,
        m_axi_wr_0_AWSIZE,
        m_axi_wr_0_AWBURST,
        m_axi_wr_0_AWLOCK,
        m_axi_wr_0_AWCACHE,
        m_axi_wr_0_AWPROT,
        m_axi_wr_0_AWQOS,
        m_axi_wr_0_AWREGION,
        m_axi_wr_0_AWUSER,
        m_axi_wr_0_WVALID,
        m_axi_wr_0_WREADY,
        m_axi_wr_0_WDATA,
        m_axi_wr_0_WSTRB,
        m_axi_wr_0_WLAST,
        m_axi_wr_0_WID,
        m_axi_wr_0_WUSER,
        m_axi_wr_0_ARVALID,
        m_axi_wr_0_ARREADY,
        m_axi_wr_0_ARADDR,
        m_axi_wr_0_ARID,
        m_axi_wr_0_ARLEN,
        m_axi_wr_0_ARSIZE,
        m_axi_wr_0_ARBURST,
        m_axi_wr_0_ARLOCK,
        m_axi_wr_0_ARCACHE,
        m_axi_wr_0_ARPROT,
        m_axi_wr_0_ARQOS,
        m_axi_wr_0_ARREGION,
        m_axi_wr_0_ARUSER,
        m_axi_wr_0_RVALID,
        m_axi_wr_0_RREADY,
        m_axi_wr_0_RDATA,
        m_axi_wr_0_RLAST,
        m_axi_wr_0_RID,
        m_axi_wr_0_RFIFONUM,
        m_axi_wr_0_RUSER,
        m_axi_wr_0_RRESP,
        m_axi_wr_0_BVALID,
        m_axi_wr_0_BREADY,
        m_axi_wr_0_BRESP,
        m_axi_wr_0_BID,
        m_axi_wr_0_BUSER,
        wr_03,
        m_axi_wr_1_AWVALID,
        m_axi_wr_1_AWREADY,
        m_axi_wr_1_AWADDR,
        m_axi_wr_1_AWID,
        m_axi_wr_1_AWLEN,
        m_axi_wr_1_AWSIZE,
        m_axi_wr_1_AWBURST,
        m_axi_wr_1_AWLOCK,
        m_axi_wr_1_AWCACHE,
        m_axi_wr_1_AWPROT,
        m_axi_wr_1_AWQOS,
        m_axi_wr_1_AWREGION,
        m_axi_wr_1_AWUSER,
        m_axi_wr_1_WVALID,
        m_axi_wr_1_WREADY,
        m_axi_wr_1_WDATA,
        m_axi_wr_1_WSTRB,
        m_axi_wr_1_WLAST,
        m_axi_wr_1_WID,
        m_axi_wr_1_WUSER,
        m_axi_wr_1_ARVALID,
        m_axi_wr_1_ARREADY,
        m_axi_wr_1_ARADDR,
        m_axi_wr_1_ARID,
        m_axi_wr_1_ARLEN,
        m_axi_wr_1_ARSIZE,
        m_axi_wr_1_ARBURST,
        m_axi_wr_1_ARLOCK,
        m_axi_wr_1_ARCACHE,
        m_axi_wr_1_ARPROT,
        m_axi_wr_1_ARQOS,
        m_axi_wr_1_ARREGION,
        m_axi_wr_1_ARUSER,
        m_axi_wr_1_RVALID,
        m_axi_wr_1_RREADY,
        m_axi_wr_1_RDATA,
        m_axi_wr_1_RLAST,
        m_axi_wr_1_RID,
        m_axi_wr_1_RFIFONUM,
        m_axi_wr_1_RUSER,
        m_axi_wr_1_RRESP,
        m_axi_wr_1_BVALID,
        m_axi_wr_1_BREADY,
        m_axi_wr_1_BRESP,
        m_axi_wr_1_BID,
        m_axi_wr_1_BUSER,
        wr_14,
        ingress_0_TDATA,
        ingress_0_TKEEP,
        ingress_0_TSTRB,
        ingress_0_TLAST,
        ingress_0_TDEST,
        ingress_1_TDATA,
        ingress_1_TKEEP,
        ingress_1_TSTRB,
        ingress_1_TLAST,
        ingress_1_TDEST,
        egress_0_TDATA,
        egress_0_TKEEP,
        egress_0_TSTRB,
        egress_0_TLAST,
        egress_0_TDEST,
        egress_1_TDATA,
        egress_1_TKEEP,
        egress_1_TSTRB,
        egress_1_TLAST,
        egress_1_TDEST,
        golden_fifo_0_TDATA,
        golden_fifo_1_TDATA,
        first,
        last,
        block_header,
        target,
        ap_clk,
        ap_rst,
        ingress_0_TVALID,
        ingress_0_TREADY,
        rd_01_ap_vld,
        first_ap_vld,
        block_header_ap_vld,
        ap_start,
        ap_done,
        ingress_1_TVALID,
        ingress_1_TREADY,
        rd_12_ap_vld,
        wr_03_ap_vld,
        egress_0_TVALID,
        egress_0_TREADY,
        last_ap_vld,
        target_ap_vld,
        golden_fifo_0_TVALID,
        golden_fifo_0_TREADY,
        wr_14_ap_vld,
        egress_1_TVALID,
        egress_1_TREADY,
        golden_fifo_1_TVALID,
        golden_fifo_1_TREADY,
        ap_ready,
        ap_idle,
        ap_continue
);


output   m_axi_rd_0_AWVALID;
input   m_axi_rd_0_AWREADY;
output  [63:0] m_axi_rd_0_AWADDR;
output  [0:0] m_axi_rd_0_AWID;
output  [31:0] m_axi_rd_0_AWLEN;
output  [2:0] m_axi_rd_0_AWSIZE;
output  [1:0] m_axi_rd_0_AWBURST;
output  [1:0] m_axi_rd_0_AWLOCK;
output  [3:0] m_axi_rd_0_AWCACHE;
output  [2:0] m_axi_rd_0_AWPROT;
output  [3:0] m_axi_rd_0_AWQOS;
output  [3:0] m_axi_rd_0_AWREGION;
output  [0:0] m_axi_rd_0_AWUSER;
output   m_axi_rd_0_WVALID;
input   m_axi_rd_0_WREADY;
output  [255:0] m_axi_rd_0_WDATA;
output  [31:0] m_axi_rd_0_WSTRB;
output   m_axi_rd_0_WLAST;
output  [0:0] m_axi_rd_0_WID;
output  [0:0] m_axi_rd_0_WUSER;
output   m_axi_rd_0_ARVALID;
input   m_axi_rd_0_ARREADY;
output  [63:0] m_axi_rd_0_ARADDR;
output  [0:0] m_axi_rd_0_ARID;
output  [31:0] m_axi_rd_0_ARLEN;
output  [2:0] m_axi_rd_0_ARSIZE;
output  [1:0] m_axi_rd_0_ARBURST;
output  [1:0] m_axi_rd_0_ARLOCK;
output  [3:0] m_axi_rd_0_ARCACHE;
output  [2:0] m_axi_rd_0_ARPROT;
output  [3:0] m_axi_rd_0_ARQOS;
output  [3:0] m_axi_rd_0_ARREGION;
output  [0:0] m_axi_rd_0_ARUSER;
input   m_axi_rd_0_RVALID;
output   m_axi_rd_0_RREADY;
input  [255:0] m_axi_rd_0_RDATA;
input   m_axi_rd_0_RLAST;
input  [0:0] m_axi_rd_0_RID;
input  [8:0] m_axi_rd_0_RFIFONUM;
input  [0:0] m_axi_rd_0_RUSER;
input  [1:0] m_axi_rd_0_RRESP;
input   m_axi_rd_0_BVALID;
output   m_axi_rd_0_BREADY;
input  [1:0] m_axi_rd_0_BRESP;
input  [0:0] m_axi_rd_0_BID;
input  [0:0] m_axi_rd_0_BUSER;
input  [63:0] rd_01;
output   m_axi_rd_1_AWVALID;
input   m_axi_rd_1_AWREADY;
output  [63:0] m_axi_rd_1_AWADDR;
output  [0:0] m_axi_rd_1_AWID;
output  [31:0] m_axi_rd_1_AWLEN;
output  [2:0] m_axi_rd_1_AWSIZE;
output  [1:0] m_axi_rd_1_AWBURST;
output  [1:0] m_axi_rd_1_AWLOCK;
output  [3:0] m_axi_rd_1_AWCACHE;
output  [2:0] m_axi_rd_1_AWPROT;
output  [3:0] m_axi_rd_1_AWQOS;
output  [3:0] m_axi_rd_1_AWREGION;
output  [0:0] m_axi_rd_1_AWUSER;
output   m_axi_rd_1_WVALID;
input   m_axi_rd_1_WREADY;
output  [255:0] m_axi_rd_1_WDATA;
output  [31:0] m_axi_rd_1_WSTRB;
output   m_axi_rd_1_WLAST;
output  [0:0] m_axi_rd_1_WID;
output  [0:0] m_axi_rd_1_WUSER;
output   m_axi_rd_1_ARVALID;
input   m_axi_rd_1_ARREADY;
output  [63:0] m_axi_rd_1_ARADDR;
output  [0:0] m_axi_rd_1_ARID;
output  [31:0] m_axi_rd_1_ARLEN;
output  [2:0] m_axi_rd_1_ARSIZE;
output  [1:0] m_axi_rd_1_ARBURST;
output  [1:0] m_axi_rd_1_ARLOCK;
output  [3:0] m_axi_rd_1_ARCACHE;
output  [2:0] m_axi_rd_1_ARPROT;
output  [3:0] m_axi_rd_1_ARQOS;
output  [3:0] m_axi_rd_1_ARREGION;
output  [0:0] m_axi_rd_1_ARUSER;
input   m_axi_rd_1_RVALID;
output   m_axi_rd_1_RREADY;
input  [255:0] m_axi_rd_1_RDATA;
input   m_axi_rd_1_RLAST;
input  [0:0] m_axi_rd_1_RID;
input  [8:0] m_axi_rd_1_RFIFONUM;
input  [0:0] m_axi_rd_1_RUSER;
input  [1:0] m_axi_rd_1_RRESP;
input   m_axi_rd_1_BVALID;
output   m_axi_rd_1_BREADY;
input  [1:0] m_axi_rd_1_BRESP;
input  [0:0] m_axi_rd_1_BID;
input  [0:0] m_axi_rd_1_BUSER;
input  [63:0] rd_12;
output   m_axi_wr_0_AWVALID;
input   m_axi_wr_0_AWREADY;
output  [63:0] m_axi_wr_0_AWADDR;
output  [0:0] m_axi_wr_0_AWID;
output  [31:0] m_axi_wr_0_AWLEN;
output  [2:0] m_axi_wr_0_AWSIZE;
output  [1:0] m_axi_wr_0_AWBURST;
output  [1:0] m_axi_wr_0_AWLOCK;
output  [3:0] m_axi_wr_0_AWCACHE;
output  [2:0] m_axi_wr_0_AWPROT;
output  [3:0] m_axi_wr_0_AWQOS;
output  [3:0] m_axi_wr_0_AWREGION;
output  [0:0] m_axi_wr_0_AWUSER;
output   m_axi_wr_0_WVALID;
input   m_axi_wr_0_WREADY;
output  [255:0] m_axi_wr_0_WDATA;
output  [31:0] m_axi_wr_0_WSTRB;
output   m_axi_wr_0_WLAST;
output  [0:0] m_axi_wr_0_WID;
output  [0:0] m_axi_wr_0_WUSER;
output   m_axi_wr_0_ARVALID;
input   m_axi_wr_0_ARREADY;
output  [63:0] m_axi_wr_0_ARADDR;
output  [0:0] m_axi_wr_0_ARID;
output  [31:0] m_axi_wr_0_ARLEN;
output  [2:0] m_axi_wr_0_ARSIZE;
output  [1:0] m_axi_wr_0_ARBURST;
output  [1:0] m_axi_wr_0_ARLOCK;
output  [3:0] m_axi_wr_0_ARCACHE;
output  [2:0] m_axi_wr_0_ARPROT;
output  [3:0] m_axi_wr_0_ARQOS;
output  [3:0] m_axi_wr_0_ARREGION;
output  [0:0] m_axi_wr_0_ARUSER;
input   m_axi_wr_0_RVALID;
output   m_axi_wr_0_RREADY;
input  [255:0] m_axi_wr_0_RDATA;
input   m_axi_wr_0_RLAST;
input  [0:0] m_axi_wr_0_RID;
input  [8:0] m_axi_wr_0_RFIFONUM;
input  [0:0] m_axi_wr_0_RUSER;
input  [1:0] m_axi_wr_0_RRESP;
input   m_axi_wr_0_BVALID;
output   m_axi_wr_0_BREADY;
input  [1:0] m_axi_wr_0_BRESP;
input  [0:0] m_axi_wr_0_BID;
input  [0:0] m_axi_wr_0_BUSER;
input  [63:0] wr_03;
output   m_axi_wr_1_AWVALID;
input   m_axi_wr_1_AWREADY;
output  [63:0] m_axi_wr_1_AWADDR;
output  [0:0] m_axi_wr_1_AWID;
output  [31:0] m_axi_wr_1_AWLEN;
output  [2:0] m_axi_wr_1_AWSIZE;
output  [1:0] m_axi_wr_1_AWBURST;
output  [1:0] m_axi_wr_1_AWLOCK;
output  [3:0] m_axi_wr_1_AWCACHE;
output  [2:0] m_axi_wr_1_AWPROT;
output  [3:0] m_axi_wr_1_AWQOS;
output  [3:0] m_axi_wr_1_AWREGION;
output  [0:0] m_axi_wr_1_AWUSER;
output   m_axi_wr_1_WVALID;
input   m_axi_wr_1_WREADY;
output  [255:0] m_axi_wr_1_WDATA;
output  [31:0] m_axi_wr_1_WSTRB;
output   m_axi_wr_1_WLAST;
output  [0:0] m_axi_wr_1_WID;
output  [0:0] m_axi_wr_1_WUSER;
output   m_axi_wr_1_ARVALID;
input   m_axi_wr_1_ARREADY;
output  [63:0] m_axi_wr_1_ARADDR;
output  [0:0] m_axi_wr_1_ARID;
output  [31:0] m_axi_wr_1_ARLEN;
output  [2:0] m_axi_wr_1_ARSIZE;
output  [1:0] m_axi_wr_1_ARBURST;
output  [1:0] m_axi_wr_1_ARLOCK;
output  [3:0] m_axi_wr_1_ARCACHE;
output  [2:0] m_axi_wr_1_ARPROT;
output  [3:0] m_axi_wr_1_ARQOS;
output  [3:0] m_axi_wr_1_ARREGION;
output  [0:0] m_axi_wr_1_ARUSER;
input   m_axi_wr_1_RVALID;
output   m_axi_wr_1_RREADY;
input  [255:0] m_axi_wr_1_RDATA;
input   m_axi_wr_1_RLAST;
input  [0:0] m_axi_wr_1_RID;
input  [8:0] m_axi_wr_1_RFIFONUM;
input  [0:0] m_axi_wr_1_RUSER;
input  [1:0] m_axi_wr_1_RRESP;
input   m_axi_wr_1_BVALID;
output   m_axi_wr_1_BREADY;
input  [1:0] m_axi_wr_1_BRESP;
input  [0:0] m_axi_wr_1_BID;
input  [0:0] m_axi_wr_1_BUSER;
input  [63:0] wr_14;
output  [511:0] ingress_0_TDATA;
output  [63:0] ingress_0_TKEEP;
output  [63:0] ingress_0_TSTRB;
output  [0:0] ingress_0_TLAST;
output  [0:0] ingress_0_TDEST;
output  [511:0] ingress_1_TDATA;
output  [63:0] ingress_1_TKEEP;
output  [63:0] ingress_1_TSTRB;
output  [0:0] ingress_1_TLAST;
output  [0:0] ingress_1_TDEST;
input  [511:0] egress_0_TDATA;
input  [63:0] egress_0_TKEEP;
input  [63:0] egress_0_TSTRB;
input  [0:0] egress_0_TLAST;
input  [0:0] egress_0_TDEST;
input  [511:0] egress_1_TDATA;
input  [63:0] egress_1_TKEEP;
input  [63:0] egress_1_TSTRB;
input  [0:0] egress_1_TLAST;
input  [0:0] egress_1_TDEST;
output  [31:0] golden_fifo_0_TDATA;
output  [31:0] golden_fifo_1_TDATA;
input  [0:0] first;
input  [0:0] last;
input  [511:0] block_header;
input  [511:0] target;
input   ap_clk;
input   ap_rst;
output   ingress_0_TVALID;
input   ingress_0_TREADY;
input   rd_01_ap_vld;
input   first_ap_vld;
input   block_header_ap_vld;
input   ap_start;
output   ap_done;
output   ingress_1_TVALID;
input   ingress_1_TREADY;
input   rd_12_ap_vld;
input   wr_03_ap_vld;
input   egress_0_TVALID;
output   egress_0_TREADY;
input   last_ap_vld;
input   target_ap_vld;
output   golden_fifo_0_TVALID;
input   golden_fifo_0_TREADY;
input   wr_14_ap_vld;
input   egress_1_TVALID;
output   egress_1_TREADY;
output   golden_fifo_1_TVALID;
input   golden_fifo_1_TREADY;
output   ap_ready;
output   ap_idle;
input   ap_continue;

wire    ingress_U0_ap_start;
wire    ingress_U0_ap_done;
wire    ingress_U0_ap_continue;
wire    ingress_U0_ap_idle;
wire    ingress_U0_ap_ready;
wire    ingress_U0_m_axi_rd_0_AWVALID;
wire   [63:0] ingress_U0_m_axi_rd_0_AWADDR;
wire   [0:0] ingress_U0_m_axi_rd_0_AWID;
wire   [31:0] ingress_U0_m_axi_rd_0_AWLEN;
wire   [2:0] ingress_U0_m_axi_rd_0_AWSIZE;
wire   [1:0] ingress_U0_m_axi_rd_0_AWBURST;
wire   [1:0] ingress_U0_m_axi_rd_0_AWLOCK;
wire   [3:0] ingress_U0_m_axi_rd_0_AWCACHE;
wire   [2:0] ingress_U0_m_axi_rd_0_AWPROT;
wire   [3:0] ingress_U0_m_axi_rd_0_AWQOS;
wire   [3:0] ingress_U0_m_axi_rd_0_AWREGION;
wire   [0:0] ingress_U0_m_axi_rd_0_AWUSER;
wire    ingress_U0_m_axi_rd_0_WVALID;
wire   [255:0] ingress_U0_m_axi_rd_0_WDATA;
wire   [31:0] ingress_U0_m_axi_rd_0_WSTRB;
wire    ingress_U0_m_axi_rd_0_WLAST;
wire   [0:0] ingress_U0_m_axi_rd_0_WID;
wire   [0:0] ingress_U0_m_axi_rd_0_WUSER;
wire    ingress_U0_m_axi_rd_0_ARVALID;
wire   [63:0] ingress_U0_m_axi_rd_0_ARADDR;
wire   [0:0] ingress_U0_m_axi_rd_0_ARID;
wire   [31:0] ingress_U0_m_axi_rd_0_ARLEN;
wire   [2:0] ingress_U0_m_axi_rd_0_ARSIZE;
wire   [1:0] ingress_U0_m_axi_rd_0_ARBURST;
wire   [1:0] ingress_U0_m_axi_rd_0_ARLOCK;
wire   [3:0] ingress_U0_m_axi_rd_0_ARCACHE;
wire   [2:0] ingress_U0_m_axi_rd_0_ARPROT;
wire   [3:0] ingress_U0_m_axi_rd_0_ARQOS;
wire   [3:0] ingress_U0_m_axi_rd_0_ARREGION;
wire   [0:0] ingress_U0_m_axi_rd_0_ARUSER;
wire    ingress_U0_m_axi_rd_0_RREADY;
wire    ingress_U0_m_axi_rd_0_BREADY;
wire   [511:0] ingress_U0_ingress_0_TDATA;
wire    ingress_U0_ingress_0_TVALID;
wire   [63:0] ingress_U0_ingress_0_TKEEP;
wire   [63:0] ingress_U0_ingress_0_TSTRB;
wire   [0:0] ingress_U0_ingress_0_TLAST;
wire   [0:0] ingress_U0_ingress_0_TDEST;
wire    ingress_U0_first;
wire    ap_sync_continue;
wire    ingress_1_U0_ap_start;
wire    ingress_1_U0_ap_done;
wire    ingress_1_U0_ap_continue;
wire    ingress_1_U0_ap_idle;
wire    ingress_1_U0_ap_ready;
wire    ingress_1_U0_m_axi_rd_1_AWVALID;
wire   [63:0] ingress_1_U0_m_axi_rd_1_AWADDR;
wire   [0:0] ingress_1_U0_m_axi_rd_1_AWID;
wire   [31:0] ingress_1_U0_m_axi_rd_1_AWLEN;
wire   [2:0] ingress_1_U0_m_axi_rd_1_AWSIZE;
wire   [1:0] ingress_1_U0_m_axi_rd_1_AWBURST;
wire   [1:0] ingress_1_U0_m_axi_rd_1_AWLOCK;
wire   [3:0] ingress_1_U0_m_axi_rd_1_AWCACHE;
wire   [2:0] ingress_1_U0_m_axi_rd_1_AWPROT;
wire   [3:0] ingress_1_U0_m_axi_rd_1_AWQOS;
wire   [3:0] ingress_1_U0_m_axi_rd_1_AWREGION;
wire   [0:0] ingress_1_U0_m_axi_rd_1_AWUSER;
wire    ingress_1_U0_m_axi_rd_1_WVALID;
wire   [255:0] ingress_1_U0_m_axi_rd_1_WDATA;
wire   [31:0] ingress_1_U0_m_axi_rd_1_WSTRB;
wire    ingress_1_U0_m_axi_rd_1_WLAST;
wire   [0:0] ingress_1_U0_m_axi_rd_1_WID;
wire   [0:0] ingress_1_U0_m_axi_rd_1_WUSER;
wire    ingress_1_U0_m_axi_rd_1_ARVALID;
wire   [63:0] ingress_1_U0_m_axi_rd_1_ARADDR;
wire   [0:0] ingress_1_U0_m_axi_rd_1_ARID;
wire   [31:0] ingress_1_U0_m_axi_rd_1_ARLEN;
wire   [2:0] ingress_1_U0_m_axi_rd_1_ARSIZE;
wire   [1:0] ingress_1_U0_m_axi_rd_1_ARBURST;
wire   [1:0] ingress_1_U0_m_axi_rd_1_ARLOCK;
wire   [3:0] ingress_1_U0_m_axi_rd_1_ARCACHE;
wire   [2:0] ingress_1_U0_m_axi_rd_1_ARPROT;
wire   [3:0] ingress_1_U0_m_axi_rd_1_ARQOS;
wire   [3:0] ingress_1_U0_m_axi_rd_1_ARREGION;
wire   [0:0] ingress_1_U0_m_axi_rd_1_ARUSER;
wire    ingress_1_U0_m_axi_rd_1_RREADY;
wire    ingress_1_U0_m_axi_rd_1_BREADY;
wire   [511:0] ingress_1_U0_ingress_1_TDATA;
wire    ingress_1_U0_ingress_1_TVALID;
wire   [63:0] ingress_1_U0_ingress_1_TKEEP;
wire   [63:0] ingress_1_U0_ingress_1_TSTRB;
wire   [0:0] ingress_1_U0_ingress_1_TLAST;
wire   [0:0] ingress_1_U0_ingress_1_TDEST;
wire    egress_U0_ap_start;
wire    egress_U0_ap_done;
wire    egress_U0_ap_continue;
wire    egress_U0_ap_idle;
wire    egress_U0_ap_ready;
wire    egress_U0_m_axi_wr_0_AWVALID;
wire   [63:0] egress_U0_m_axi_wr_0_AWADDR;
wire   [0:0] egress_U0_m_axi_wr_0_AWID;
wire   [31:0] egress_U0_m_axi_wr_0_AWLEN;
wire   [2:0] egress_U0_m_axi_wr_0_AWSIZE;
wire   [1:0] egress_U0_m_axi_wr_0_AWBURST;
wire   [1:0] egress_U0_m_axi_wr_0_AWLOCK;
wire   [3:0] egress_U0_m_axi_wr_0_AWCACHE;
wire   [2:0] egress_U0_m_axi_wr_0_AWPROT;
wire   [3:0] egress_U0_m_axi_wr_0_AWQOS;
wire   [3:0] egress_U0_m_axi_wr_0_AWREGION;
wire   [0:0] egress_U0_m_axi_wr_0_AWUSER;
wire    egress_U0_m_axi_wr_0_WVALID;
wire   [255:0] egress_U0_m_axi_wr_0_WDATA;
wire   [31:0] egress_U0_m_axi_wr_0_WSTRB;
wire    egress_U0_m_axi_wr_0_WLAST;
wire   [0:0] egress_U0_m_axi_wr_0_WID;
wire   [0:0] egress_U0_m_axi_wr_0_WUSER;
wire    egress_U0_m_axi_wr_0_ARVALID;
wire   [63:0] egress_U0_m_axi_wr_0_ARADDR;
wire   [0:0] egress_U0_m_axi_wr_0_ARID;
wire   [31:0] egress_U0_m_axi_wr_0_ARLEN;
wire   [2:0] egress_U0_m_axi_wr_0_ARSIZE;
wire   [1:0] egress_U0_m_axi_wr_0_ARBURST;
wire   [1:0] egress_U0_m_axi_wr_0_ARLOCK;
wire   [3:0] egress_U0_m_axi_wr_0_ARCACHE;
wire   [2:0] egress_U0_m_axi_wr_0_ARPROT;
wire   [3:0] egress_U0_m_axi_wr_0_ARQOS;
wire   [3:0] egress_U0_m_axi_wr_0_ARREGION;
wire   [0:0] egress_U0_m_axi_wr_0_ARUSER;
wire    egress_U0_m_axi_wr_0_RREADY;
wire    egress_U0_m_axi_wr_0_BREADY;
wire    egress_U0_egress_0_TREADY;
wire   [31:0] egress_U0_golden_fifo_0_TDATA;
wire    egress_U0_golden_fifo_0_TVALID;
wire    egress_1_U0_ap_start;
wire    egress_1_U0_ap_done;
wire    egress_1_U0_ap_continue;
wire    egress_1_U0_ap_idle;
wire    egress_1_U0_ap_ready;
wire    egress_1_U0_m_axi_wr_1_AWVALID;
wire   [63:0] egress_1_U0_m_axi_wr_1_AWADDR;
wire   [0:0] egress_1_U0_m_axi_wr_1_AWID;
wire   [31:0] egress_1_U0_m_axi_wr_1_AWLEN;
wire   [2:0] egress_1_U0_m_axi_wr_1_AWSIZE;
wire   [1:0] egress_1_U0_m_axi_wr_1_AWBURST;
wire   [1:0] egress_1_U0_m_axi_wr_1_AWLOCK;
wire   [3:0] egress_1_U0_m_axi_wr_1_AWCACHE;
wire   [2:0] egress_1_U0_m_axi_wr_1_AWPROT;
wire   [3:0] egress_1_U0_m_axi_wr_1_AWQOS;
wire   [3:0] egress_1_U0_m_axi_wr_1_AWREGION;
wire   [0:0] egress_1_U0_m_axi_wr_1_AWUSER;
wire    egress_1_U0_m_axi_wr_1_WVALID;
wire   [255:0] egress_1_U0_m_axi_wr_1_WDATA;
wire   [31:0] egress_1_U0_m_axi_wr_1_WSTRB;
wire    egress_1_U0_m_axi_wr_1_WLAST;
wire   [0:0] egress_1_U0_m_axi_wr_1_WID;
wire   [0:0] egress_1_U0_m_axi_wr_1_WUSER;
wire    egress_1_U0_m_axi_wr_1_ARVALID;
wire   [63:0] egress_1_U0_m_axi_wr_1_ARADDR;
wire   [0:0] egress_1_U0_m_axi_wr_1_ARID;
wire   [31:0] egress_1_U0_m_axi_wr_1_ARLEN;
wire   [2:0] egress_1_U0_m_axi_wr_1_ARSIZE;
wire   [1:0] egress_1_U0_m_axi_wr_1_ARBURST;
wire   [1:0] egress_1_U0_m_axi_wr_1_ARLOCK;
wire   [3:0] egress_1_U0_m_axi_wr_1_ARCACHE;
wire   [2:0] egress_1_U0_m_axi_wr_1_ARPROT;
wire   [3:0] egress_1_U0_m_axi_wr_1_ARQOS;
wire   [3:0] egress_1_U0_m_axi_wr_1_ARREGION;
wire   [0:0] egress_1_U0_m_axi_wr_1_ARUSER;
wire    egress_1_U0_m_axi_wr_1_RREADY;
wire    egress_1_U0_m_axi_wr_1_BREADY;
wire    egress_1_U0_egress_1_TREADY;
wire   [31:0] egress_1_U0_golden_fifo_1_TDATA;
wire    egress_1_U0_golden_fifo_1_TVALID;
wire    ap_sync_done;
wire    ap_sync_ready;
reg    ap_sync_reg_ingress_U0_ap_ready;
wire    ap_sync_ingress_U0_ap_ready;
reg    ap_sync_reg_ingress_1_U0_ap_ready;
wire    ap_sync_ingress_1_U0_ap_ready;
reg    ap_sync_reg_egress_U0_ap_ready;
wire    ap_sync_egress_U0_ap_ready;
reg    ap_sync_reg_egress_1_U0_ap_ready;
wire    ap_sync_egress_1_U0_ap_ready;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_sync_reg_ingress_U0_ap_ready = 1'b0;
#0 ap_sync_reg_ingress_1_U0_ap_ready = 1'b0;
#0 ap_sync_reg_egress_U0_ap_ready = 1'b0;
#0 ap_sync_reg_egress_1_U0_ap_ready = 1'b0;
end

hash_controller_ingress ingress_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ingress_U0_ap_start),
    .ap_done(ingress_U0_ap_done),
    .ap_continue(ingress_U0_ap_continue),
    .ap_idle(ingress_U0_ap_idle),
    .ap_ready(ingress_U0_ap_ready),
    .m_axi_rd_0_AWVALID(ingress_U0_m_axi_rd_0_AWVALID),
    .m_axi_rd_0_AWREADY(1'b0),
    .m_axi_rd_0_AWADDR(ingress_U0_m_axi_rd_0_AWADDR),
    .m_axi_rd_0_AWID(ingress_U0_m_axi_rd_0_AWID),
    .m_axi_rd_0_AWLEN(ingress_U0_m_axi_rd_0_AWLEN),
    .m_axi_rd_0_AWSIZE(ingress_U0_m_axi_rd_0_AWSIZE),
    .m_axi_rd_0_AWBURST(ingress_U0_m_axi_rd_0_AWBURST),
    .m_axi_rd_0_AWLOCK(ingress_U0_m_axi_rd_0_AWLOCK),
    .m_axi_rd_0_AWCACHE(ingress_U0_m_axi_rd_0_AWCACHE),
    .m_axi_rd_0_AWPROT(ingress_U0_m_axi_rd_0_AWPROT),
    .m_axi_rd_0_AWQOS(ingress_U0_m_axi_rd_0_AWQOS),
    .m_axi_rd_0_AWREGION(ingress_U0_m_axi_rd_0_AWREGION),
    .m_axi_rd_0_AWUSER(ingress_U0_m_axi_rd_0_AWUSER),
    .m_axi_rd_0_WVALID(ingress_U0_m_axi_rd_0_WVALID),
    .m_axi_rd_0_WREADY(1'b0),
    .m_axi_rd_0_WDATA(ingress_U0_m_axi_rd_0_WDATA),
    .m_axi_rd_0_WSTRB(ingress_U0_m_axi_rd_0_WSTRB),
    .m_axi_rd_0_WLAST(ingress_U0_m_axi_rd_0_WLAST),
    .m_axi_rd_0_WID(ingress_U0_m_axi_rd_0_WID),
    .m_axi_rd_0_WUSER(ingress_U0_m_axi_rd_0_WUSER),
    .m_axi_rd_0_ARVALID(ingress_U0_m_axi_rd_0_ARVALID),
    .m_axi_rd_0_ARREADY(m_axi_rd_0_ARREADY),
    .m_axi_rd_0_ARADDR(ingress_U0_m_axi_rd_0_ARADDR),
    .m_axi_rd_0_ARID(ingress_U0_m_axi_rd_0_ARID),
    .m_axi_rd_0_ARLEN(ingress_U0_m_axi_rd_0_ARLEN),
    .m_axi_rd_0_ARSIZE(ingress_U0_m_axi_rd_0_ARSIZE),
    .m_axi_rd_0_ARBURST(ingress_U0_m_axi_rd_0_ARBURST),
    .m_axi_rd_0_ARLOCK(ingress_U0_m_axi_rd_0_ARLOCK),
    .m_axi_rd_0_ARCACHE(ingress_U0_m_axi_rd_0_ARCACHE),
    .m_axi_rd_0_ARPROT(ingress_U0_m_axi_rd_0_ARPROT),
    .m_axi_rd_0_ARQOS(ingress_U0_m_axi_rd_0_ARQOS),
    .m_axi_rd_0_ARREGION(ingress_U0_m_axi_rd_0_ARREGION),
    .m_axi_rd_0_ARUSER(ingress_U0_m_axi_rd_0_ARUSER),
    .m_axi_rd_0_RVALID(m_axi_rd_0_RVALID),
    .m_axi_rd_0_RREADY(ingress_U0_m_axi_rd_0_RREADY),
    .m_axi_rd_0_RDATA(m_axi_rd_0_RDATA),
    .m_axi_rd_0_RLAST(m_axi_rd_0_RLAST),
    .m_axi_rd_0_RID(m_axi_rd_0_RID),
    .m_axi_rd_0_RFIFONUM(m_axi_rd_0_RFIFONUM),
    .m_axi_rd_0_RUSER(m_axi_rd_0_RUSER),
    .m_axi_rd_0_RRESP(m_axi_rd_0_RRESP),
    .m_axi_rd_0_BVALID(1'b0),
    .m_axi_rd_0_BREADY(ingress_U0_m_axi_rd_0_BREADY),
    .m_axi_rd_0_BRESP(2'd0),
    .m_axi_rd_0_BID(1'd0),
    .m_axi_rd_0_BUSER(1'd0),
    .ingress_0_TDATA(ingress_U0_ingress_0_TDATA),
    .ingress_0_TVALID(ingress_U0_ingress_0_TVALID),
    .ingress_0_TREADY(ingress_0_TREADY),
    .ingress_0_TKEEP(ingress_U0_ingress_0_TKEEP),
    .ingress_0_TSTRB(ingress_U0_ingress_0_TSTRB),
    .ingress_0_TLAST(ingress_U0_ingress_0_TLAST),
    .ingress_0_TDEST(ingress_U0_ingress_0_TDEST),
    .gmem(rd_01),
    .first(ingress_U0_first),
    .block_header(block_header)
);

hash_controller_ingress_1 ingress_1_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ingress_1_U0_ap_start),
    .ap_done(ingress_1_U0_ap_done),
    .ap_continue(ingress_1_U0_ap_continue),
    .ap_idle(ingress_1_U0_ap_idle),
    .ap_ready(ingress_1_U0_ap_ready),
    .m_axi_rd_1_AWVALID(ingress_1_U0_m_axi_rd_1_AWVALID),
    .m_axi_rd_1_AWREADY(1'b0),
    .m_axi_rd_1_AWADDR(ingress_1_U0_m_axi_rd_1_AWADDR),
    .m_axi_rd_1_AWID(ingress_1_U0_m_axi_rd_1_AWID),
    .m_axi_rd_1_AWLEN(ingress_1_U0_m_axi_rd_1_AWLEN),
    .m_axi_rd_1_AWSIZE(ingress_1_U0_m_axi_rd_1_AWSIZE),
    .m_axi_rd_1_AWBURST(ingress_1_U0_m_axi_rd_1_AWBURST),
    .m_axi_rd_1_AWLOCK(ingress_1_U0_m_axi_rd_1_AWLOCK),
    .m_axi_rd_1_AWCACHE(ingress_1_U0_m_axi_rd_1_AWCACHE),
    .m_axi_rd_1_AWPROT(ingress_1_U0_m_axi_rd_1_AWPROT),
    .m_axi_rd_1_AWQOS(ingress_1_U0_m_axi_rd_1_AWQOS),
    .m_axi_rd_1_AWREGION(ingress_1_U0_m_axi_rd_1_AWREGION),
    .m_axi_rd_1_AWUSER(ingress_1_U0_m_axi_rd_1_AWUSER),
    .m_axi_rd_1_WVALID(ingress_1_U0_m_axi_rd_1_WVALID),
    .m_axi_rd_1_WREADY(1'b0),
    .m_axi_rd_1_WDATA(ingress_1_U0_m_axi_rd_1_WDATA),
    .m_axi_rd_1_WSTRB(ingress_1_U0_m_axi_rd_1_WSTRB),
    .m_axi_rd_1_WLAST(ingress_1_U0_m_axi_rd_1_WLAST),
    .m_axi_rd_1_WID(ingress_1_U0_m_axi_rd_1_WID),
    .m_axi_rd_1_WUSER(ingress_1_U0_m_axi_rd_1_WUSER),
    .m_axi_rd_1_ARVALID(ingress_1_U0_m_axi_rd_1_ARVALID),
    .m_axi_rd_1_ARREADY(m_axi_rd_1_ARREADY),
    .m_axi_rd_1_ARADDR(ingress_1_U0_m_axi_rd_1_ARADDR),
    .m_axi_rd_1_ARID(ingress_1_U0_m_axi_rd_1_ARID),
    .m_axi_rd_1_ARLEN(ingress_1_U0_m_axi_rd_1_ARLEN),
    .m_axi_rd_1_ARSIZE(ingress_1_U0_m_axi_rd_1_ARSIZE),
    .m_axi_rd_1_ARBURST(ingress_1_U0_m_axi_rd_1_ARBURST),
    .m_axi_rd_1_ARLOCK(ingress_1_U0_m_axi_rd_1_ARLOCK),
    .m_axi_rd_1_ARCACHE(ingress_1_U0_m_axi_rd_1_ARCACHE),
    .m_axi_rd_1_ARPROT(ingress_1_U0_m_axi_rd_1_ARPROT),
    .m_axi_rd_1_ARQOS(ingress_1_U0_m_axi_rd_1_ARQOS),
    .m_axi_rd_1_ARREGION(ingress_1_U0_m_axi_rd_1_ARREGION),
    .m_axi_rd_1_ARUSER(ingress_1_U0_m_axi_rd_1_ARUSER),
    .m_axi_rd_1_RVALID(m_axi_rd_1_RVALID),
    .m_axi_rd_1_RREADY(ingress_1_U0_m_axi_rd_1_RREADY),
    .m_axi_rd_1_RDATA(m_axi_rd_1_RDATA),
    .m_axi_rd_1_RLAST(m_axi_rd_1_RLAST),
    .m_axi_rd_1_RID(m_axi_rd_1_RID),
    .m_axi_rd_1_RFIFONUM(m_axi_rd_1_RFIFONUM),
    .m_axi_rd_1_RUSER(m_axi_rd_1_RUSER),
    .m_axi_rd_1_RRESP(m_axi_rd_1_RRESP),
    .m_axi_rd_1_BVALID(1'b0),
    .m_axi_rd_1_BREADY(ingress_1_U0_m_axi_rd_1_BREADY),
    .m_axi_rd_1_BRESP(2'd0),
    .m_axi_rd_1_BID(1'd0),
    .m_axi_rd_1_BUSER(1'd0),
    .ingress_1_TDATA(ingress_1_U0_ingress_1_TDATA),
    .ingress_1_TVALID(ingress_1_U0_ingress_1_TVALID),
    .ingress_1_TREADY(ingress_1_TREADY),
    .ingress_1_TKEEP(ingress_1_U0_ingress_1_TKEEP),
    .ingress_1_TSTRB(ingress_1_U0_ingress_1_TSTRB),
    .ingress_1_TLAST(ingress_1_U0_ingress_1_TLAST),
    .ingress_1_TDEST(ingress_1_U0_ingress_1_TDEST),
    .gmem(rd_12),
    .first(first),
    .block_header(block_header)
);

hash_controller_egress egress_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(egress_U0_ap_start),
    .ap_done(egress_U0_ap_done),
    .ap_continue(egress_U0_ap_continue),
    .ap_idle(egress_U0_ap_idle),
    .ap_ready(egress_U0_ap_ready),
    .egress_0_TVALID(egress_0_TVALID),
    .m_axi_wr_0_AWVALID(egress_U0_m_axi_wr_0_AWVALID),
    .m_axi_wr_0_AWREADY(m_axi_wr_0_AWREADY),
    .m_axi_wr_0_AWADDR(egress_U0_m_axi_wr_0_AWADDR),
    .m_axi_wr_0_AWID(egress_U0_m_axi_wr_0_AWID),
    .m_axi_wr_0_AWLEN(egress_U0_m_axi_wr_0_AWLEN),
    .m_axi_wr_0_AWSIZE(egress_U0_m_axi_wr_0_AWSIZE),
    .m_axi_wr_0_AWBURST(egress_U0_m_axi_wr_0_AWBURST),
    .m_axi_wr_0_AWLOCK(egress_U0_m_axi_wr_0_AWLOCK),
    .m_axi_wr_0_AWCACHE(egress_U0_m_axi_wr_0_AWCACHE),
    .m_axi_wr_0_AWPROT(egress_U0_m_axi_wr_0_AWPROT),
    .m_axi_wr_0_AWQOS(egress_U0_m_axi_wr_0_AWQOS),
    .m_axi_wr_0_AWREGION(egress_U0_m_axi_wr_0_AWREGION),
    .m_axi_wr_0_AWUSER(egress_U0_m_axi_wr_0_AWUSER),
    .m_axi_wr_0_WVALID(egress_U0_m_axi_wr_0_WVALID),
    .m_axi_wr_0_WREADY(m_axi_wr_0_WREADY),
    .m_axi_wr_0_WDATA(egress_U0_m_axi_wr_0_WDATA),
    .m_axi_wr_0_WSTRB(egress_U0_m_axi_wr_0_WSTRB),
    .m_axi_wr_0_WLAST(egress_U0_m_axi_wr_0_WLAST),
    .m_axi_wr_0_WID(egress_U0_m_axi_wr_0_WID),
    .m_axi_wr_0_WUSER(egress_U0_m_axi_wr_0_WUSER),
    .m_axi_wr_0_ARVALID(egress_U0_m_axi_wr_0_ARVALID),
    .m_axi_wr_0_ARREADY(1'b0),
    .m_axi_wr_0_ARADDR(egress_U0_m_axi_wr_0_ARADDR),
    .m_axi_wr_0_ARID(egress_U0_m_axi_wr_0_ARID),
    .m_axi_wr_0_ARLEN(egress_U0_m_axi_wr_0_ARLEN),
    .m_axi_wr_0_ARSIZE(egress_U0_m_axi_wr_0_ARSIZE),
    .m_axi_wr_0_ARBURST(egress_U0_m_axi_wr_0_ARBURST),
    .m_axi_wr_0_ARLOCK(egress_U0_m_axi_wr_0_ARLOCK),
    .m_axi_wr_0_ARCACHE(egress_U0_m_axi_wr_0_ARCACHE),
    .m_axi_wr_0_ARPROT(egress_U0_m_axi_wr_0_ARPROT),
    .m_axi_wr_0_ARQOS(egress_U0_m_axi_wr_0_ARQOS),
    .m_axi_wr_0_ARREGION(egress_U0_m_axi_wr_0_ARREGION),
    .m_axi_wr_0_ARUSER(egress_U0_m_axi_wr_0_ARUSER),
    .m_axi_wr_0_RVALID(1'b0),
    .m_axi_wr_0_RREADY(egress_U0_m_axi_wr_0_RREADY),
    .m_axi_wr_0_RDATA(256'd0),
    .m_axi_wr_0_RLAST(1'b0),
    .m_axi_wr_0_RID(1'd0),
    .m_axi_wr_0_RFIFONUM(9'd0),
    .m_axi_wr_0_RUSER(1'd0),
    .m_axi_wr_0_RRESP(2'd0),
    .m_axi_wr_0_BVALID(m_axi_wr_0_BVALID),
    .m_axi_wr_0_BREADY(egress_U0_m_axi_wr_0_BREADY),
    .m_axi_wr_0_BRESP(m_axi_wr_0_BRESP),
    .m_axi_wr_0_BID(m_axi_wr_0_BID),
    .m_axi_wr_0_BUSER(m_axi_wr_0_BUSER),
    .golden_fifo_0_TREADY(golden_fifo_0_TREADY),
    .gmem(wr_03),
    .egress_0_TDATA(egress_0_TDATA),
    .egress_0_TREADY(egress_U0_egress_0_TREADY),
    .egress_0_TKEEP(egress_0_TKEEP),
    .egress_0_TSTRB(egress_0_TSTRB),
    .egress_0_TLAST(egress_0_TLAST),
    .egress_0_TDEST(egress_0_TDEST),
    .last(last),
    .target(target),
    .golden_fifo_0_TDATA(egress_U0_golden_fifo_0_TDATA),
    .golden_fifo_0_TVALID(egress_U0_golden_fifo_0_TVALID)
);

hash_controller_egress_1 egress_1_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(egress_1_U0_ap_start),
    .ap_done(egress_1_U0_ap_done),
    .ap_continue(egress_1_U0_ap_continue),
    .ap_idle(egress_1_U0_ap_idle),
    .ap_ready(egress_1_U0_ap_ready),
    .egress_1_TVALID(egress_1_TVALID),
    .m_axi_wr_1_AWVALID(egress_1_U0_m_axi_wr_1_AWVALID),
    .m_axi_wr_1_AWREADY(m_axi_wr_1_AWREADY),
    .m_axi_wr_1_AWADDR(egress_1_U0_m_axi_wr_1_AWADDR),
    .m_axi_wr_1_AWID(egress_1_U0_m_axi_wr_1_AWID),
    .m_axi_wr_1_AWLEN(egress_1_U0_m_axi_wr_1_AWLEN),
    .m_axi_wr_1_AWSIZE(egress_1_U0_m_axi_wr_1_AWSIZE),
    .m_axi_wr_1_AWBURST(egress_1_U0_m_axi_wr_1_AWBURST),
    .m_axi_wr_1_AWLOCK(egress_1_U0_m_axi_wr_1_AWLOCK),
    .m_axi_wr_1_AWCACHE(egress_1_U0_m_axi_wr_1_AWCACHE),
    .m_axi_wr_1_AWPROT(egress_1_U0_m_axi_wr_1_AWPROT),
    .m_axi_wr_1_AWQOS(egress_1_U0_m_axi_wr_1_AWQOS),
    .m_axi_wr_1_AWREGION(egress_1_U0_m_axi_wr_1_AWREGION),
    .m_axi_wr_1_AWUSER(egress_1_U0_m_axi_wr_1_AWUSER),
    .m_axi_wr_1_WVALID(egress_1_U0_m_axi_wr_1_WVALID),
    .m_axi_wr_1_WREADY(m_axi_wr_1_WREADY),
    .m_axi_wr_1_WDATA(egress_1_U0_m_axi_wr_1_WDATA),
    .m_axi_wr_1_WSTRB(egress_1_U0_m_axi_wr_1_WSTRB),
    .m_axi_wr_1_WLAST(egress_1_U0_m_axi_wr_1_WLAST),
    .m_axi_wr_1_WID(egress_1_U0_m_axi_wr_1_WID),
    .m_axi_wr_1_WUSER(egress_1_U0_m_axi_wr_1_WUSER),
    .m_axi_wr_1_ARVALID(egress_1_U0_m_axi_wr_1_ARVALID),
    .m_axi_wr_1_ARREADY(1'b0),
    .m_axi_wr_1_ARADDR(egress_1_U0_m_axi_wr_1_ARADDR),
    .m_axi_wr_1_ARID(egress_1_U0_m_axi_wr_1_ARID),
    .m_axi_wr_1_ARLEN(egress_1_U0_m_axi_wr_1_ARLEN),
    .m_axi_wr_1_ARSIZE(egress_1_U0_m_axi_wr_1_ARSIZE),
    .m_axi_wr_1_ARBURST(egress_1_U0_m_axi_wr_1_ARBURST),
    .m_axi_wr_1_ARLOCK(egress_1_U0_m_axi_wr_1_ARLOCK),
    .m_axi_wr_1_ARCACHE(egress_1_U0_m_axi_wr_1_ARCACHE),
    .m_axi_wr_1_ARPROT(egress_1_U0_m_axi_wr_1_ARPROT),
    .m_axi_wr_1_ARQOS(egress_1_U0_m_axi_wr_1_ARQOS),
    .m_axi_wr_1_ARREGION(egress_1_U0_m_axi_wr_1_ARREGION),
    .m_axi_wr_1_ARUSER(egress_1_U0_m_axi_wr_1_ARUSER),
    .m_axi_wr_1_RVALID(1'b0),
    .m_axi_wr_1_RREADY(egress_1_U0_m_axi_wr_1_RREADY),
    .m_axi_wr_1_RDATA(256'd0),
    .m_axi_wr_1_RLAST(1'b0),
    .m_axi_wr_1_RID(1'd0),
    .m_axi_wr_1_RFIFONUM(9'd0),
    .m_axi_wr_1_RUSER(1'd0),
    .m_axi_wr_1_RRESP(2'd0),
    .m_axi_wr_1_BVALID(m_axi_wr_1_BVALID),
    .m_axi_wr_1_BREADY(egress_1_U0_m_axi_wr_1_BREADY),
    .m_axi_wr_1_BRESP(m_axi_wr_1_BRESP),
    .m_axi_wr_1_BID(m_axi_wr_1_BID),
    .m_axi_wr_1_BUSER(m_axi_wr_1_BUSER),
    .golden_fifo_1_TREADY(golden_fifo_1_TREADY),
    .gmem(wr_14),
    .egress_1_TDATA(egress_1_TDATA),
    .egress_1_TREADY(egress_1_U0_egress_1_TREADY),
    .egress_1_TKEEP(egress_1_TKEEP),
    .egress_1_TSTRB(egress_1_TSTRB),
    .egress_1_TLAST(egress_1_TLAST),
    .egress_1_TDEST(egress_1_TDEST),
    .last(last),
    .target(target),
    .golden_fifo_1_TDATA(egress_1_U0_golden_fifo_1_TDATA),
    .golden_fifo_1_TVALID(egress_1_U0_golden_fifo_1_TVALID)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_egress_1_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_egress_1_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_egress_1_U0_ap_ready <= ap_sync_egress_1_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_egress_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_egress_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_egress_U0_ap_ready <= ap_sync_egress_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_ingress_1_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_ingress_1_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_ingress_1_U0_ap_ready <= ap_sync_ingress_1_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_ingress_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_ingress_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_ingress_U0_ap_ready <= ap_sync_ingress_U0_ap_ready;
        end
    end
end

assign ap_done = ap_sync_done;

assign ap_idle = (ingress_U0_ap_idle & ingress_1_U0_ap_idle & egress_U0_ap_idle & egress_1_U0_ap_idle);

assign ap_ready = ap_sync_ready;

assign ap_sync_continue = (ap_sync_done & ap_continue);

assign ap_sync_done = (ingress_U0_ap_done & ingress_1_U0_ap_done & egress_U0_ap_done & egress_1_U0_ap_done);

assign ap_sync_egress_1_U0_ap_ready = (egress_1_U0_ap_ready | ap_sync_reg_egress_1_U0_ap_ready);

assign ap_sync_egress_U0_ap_ready = (egress_U0_ap_ready | ap_sync_reg_egress_U0_ap_ready);

assign ap_sync_ingress_1_U0_ap_ready = (ingress_1_U0_ap_ready | ap_sync_reg_ingress_1_U0_ap_ready);

assign ap_sync_ingress_U0_ap_ready = (ingress_U0_ap_ready | ap_sync_reg_ingress_U0_ap_ready);

assign ap_sync_ready = (ap_sync_ingress_U0_ap_ready & ap_sync_ingress_1_U0_ap_ready & ap_sync_egress_U0_ap_ready & ap_sync_egress_1_U0_ap_ready);

assign egress_0_TREADY = egress_U0_egress_0_TREADY;

assign egress_1_TREADY = egress_1_U0_egress_1_TREADY;

assign egress_1_U0_ap_continue = ap_sync_continue;

assign egress_1_U0_ap_start = ((ap_sync_reg_egress_1_U0_ap_ready ^ 1'b1) & ap_start);

assign egress_U0_ap_continue = ap_sync_continue;

assign egress_U0_ap_start = ((ap_sync_reg_egress_U0_ap_ready ^ 1'b1) & ap_start);

assign golden_fifo_0_TDATA = egress_U0_golden_fifo_0_TDATA;

assign golden_fifo_0_TVALID = egress_U0_golden_fifo_0_TVALID;

assign golden_fifo_1_TDATA = egress_1_U0_golden_fifo_1_TDATA;

assign golden_fifo_1_TVALID = egress_1_U0_golden_fifo_1_TVALID;

assign ingress_0_TDATA = ingress_U0_ingress_0_TDATA;

assign ingress_0_TDEST = ingress_U0_ingress_0_TDEST;

assign ingress_0_TKEEP = ingress_U0_ingress_0_TKEEP;

assign ingress_0_TLAST = ingress_U0_ingress_0_TLAST;

assign ingress_0_TSTRB = ingress_U0_ingress_0_TSTRB;

assign ingress_0_TVALID = ingress_U0_ingress_0_TVALID;

assign ingress_1_TDATA = ingress_1_U0_ingress_1_TDATA;

assign ingress_1_TDEST = ingress_1_U0_ingress_1_TDEST;

assign ingress_1_TKEEP = ingress_1_U0_ingress_1_TKEEP;

assign ingress_1_TLAST = ingress_1_U0_ingress_1_TLAST;

assign ingress_1_TSTRB = ingress_1_U0_ingress_1_TSTRB;

assign ingress_1_TVALID = ingress_1_U0_ingress_1_TVALID;

assign ingress_1_U0_ap_continue = ap_sync_continue;

assign ingress_1_U0_ap_start = ((ap_sync_reg_ingress_1_U0_ap_ready ^ 1'b1) & ap_start);

assign ingress_U0_ap_continue = ap_sync_continue;

assign ingress_U0_ap_start = ((ap_sync_reg_ingress_U0_ap_ready ^ 1'b1) & ap_start);

assign ingress_U0_first = first;

assign m_axi_rd_0_ARADDR = ingress_U0_m_axi_rd_0_ARADDR;

assign m_axi_rd_0_ARBURST = ingress_U0_m_axi_rd_0_ARBURST;

assign m_axi_rd_0_ARCACHE = ingress_U0_m_axi_rd_0_ARCACHE;

assign m_axi_rd_0_ARID = ingress_U0_m_axi_rd_0_ARID;

assign m_axi_rd_0_ARLEN = ingress_U0_m_axi_rd_0_ARLEN;

assign m_axi_rd_0_ARLOCK = ingress_U0_m_axi_rd_0_ARLOCK;

assign m_axi_rd_0_ARPROT = ingress_U0_m_axi_rd_0_ARPROT;

assign m_axi_rd_0_ARQOS = ingress_U0_m_axi_rd_0_ARQOS;

assign m_axi_rd_0_ARREGION = ingress_U0_m_axi_rd_0_ARREGION;

assign m_axi_rd_0_ARSIZE = ingress_U0_m_axi_rd_0_ARSIZE;

assign m_axi_rd_0_ARUSER = ingress_U0_m_axi_rd_0_ARUSER;

assign m_axi_rd_0_ARVALID = ingress_U0_m_axi_rd_0_ARVALID;

assign m_axi_rd_0_AWADDR = 64'd0;

assign m_axi_rd_0_AWBURST = 2'd0;

assign m_axi_rd_0_AWCACHE = 4'd0;

assign m_axi_rd_0_AWID = 1'd0;

assign m_axi_rd_0_AWLEN = 32'd0;

assign m_axi_rd_0_AWLOCK = 2'd0;

assign m_axi_rd_0_AWPROT = 3'd0;

assign m_axi_rd_0_AWQOS = 4'd0;

assign m_axi_rd_0_AWREGION = 4'd0;

assign m_axi_rd_0_AWSIZE = 3'd0;

assign m_axi_rd_0_AWUSER = 1'd0;

assign m_axi_rd_0_AWVALID = 1'b0;

assign m_axi_rd_0_BREADY = 1'b0;

assign m_axi_rd_0_RREADY = ingress_U0_m_axi_rd_0_RREADY;

assign m_axi_rd_0_WDATA = 256'd0;

assign m_axi_rd_0_WID = 1'd0;

assign m_axi_rd_0_WLAST = 1'b0;

assign m_axi_rd_0_WSTRB = 32'd0;

assign m_axi_rd_0_WUSER = 1'd0;

assign m_axi_rd_0_WVALID = 1'b0;

assign m_axi_rd_1_ARADDR = ingress_1_U0_m_axi_rd_1_ARADDR;

assign m_axi_rd_1_ARBURST = ingress_1_U0_m_axi_rd_1_ARBURST;

assign m_axi_rd_1_ARCACHE = ingress_1_U0_m_axi_rd_1_ARCACHE;

assign m_axi_rd_1_ARID = ingress_1_U0_m_axi_rd_1_ARID;

assign m_axi_rd_1_ARLEN = ingress_1_U0_m_axi_rd_1_ARLEN;

assign m_axi_rd_1_ARLOCK = ingress_1_U0_m_axi_rd_1_ARLOCK;

assign m_axi_rd_1_ARPROT = ingress_1_U0_m_axi_rd_1_ARPROT;

assign m_axi_rd_1_ARQOS = ingress_1_U0_m_axi_rd_1_ARQOS;

assign m_axi_rd_1_ARREGION = ingress_1_U0_m_axi_rd_1_ARREGION;

assign m_axi_rd_1_ARSIZE = ingress_1_U0_m_axi_rd_1_ARSIZE;

assign m_axi_rd_1_ARUSER = ingress_1_U0_m_axi_rd_1_ARUSER;

assign m_axi_rd_1_ARVALID = ingress_1_U0_m_axi_rd_1_ARVALID;

assign m_axi_rd_1_AWADDR = 64'd0;

assign m_axi_rd_1_AWBURST = 2'd0;

assign m_axi_rd_1_AWCACHE = 4'd0;

assign m_axi_rd_1_AWID = 1'd0;

assign m_axi_rd_1_AWLEN = 32'd0;

assign m_axi_rd_1_AWLOCK = 2'd0;

assign m_axi_rd_1_AWPROT = 3'd0;

assign m_axi_rd_1_AWQOS = 4'd0;

assign m_axi_rd_1_AWREGION = 4'd0;

assign m_axi_rd_1_AWSIZE = 3'd0;

assign m_axi_rd_1_AWUSER = 1'd0;

assign m_axi_rd_1_AWVALID = 1'b0;

assign m_axi_rd_1_BREADY = 1'b0;

assign m_axi_rd_1_RREADY = ingress_1_U0_m_axi_rd_1_RREADY;

assign m_axi_rd_1_WDATA = 256'd0;

assign m_axi_rd_1_WID = 1'd0;

assign m_axi_rd_1_WLAST = 1'b0;

assign m_axi_rd_1_WSTRB = 32'd0;

assign m_axi_rd_1_WUSER = 1'd0;

assign m_axi_rd_1_WVALID = 1'b0;

assign m_axi_wr_0_ARADDR = 64'd0;

assign m_axi_wr_0_ARBURST = 2'd0;

assign m_axi_wr_0_ARCACHE = 4'd0;

assign m_axi_wr_0_ARID = 1'd0;

assign m_axi_wr_0_ARLEN = 32'd0;

assign m_axi_wr_0_ARLOCK = 2'd0;

assign m_axi_wr_0_ARPROT = 3'd0;

assign m_axi_wr_0_ARQOS = 4'd0;

assign m_axi_wr_0_ARREGION = 4'd0;

assign m_axi_wr_0_ARSIZE = 3'd0;

assign m_axi_wr_0_ARUSER = 1'd0;

assign m_axi_wr_0_ARVALID = 1'b0;

assign m_axi_wr_0_AWADDR = egress_U0_m_axi_wr_0_AWADDR;

assign m_axi_wr_0_AWBURST = egress_U0_m_axi_wr_0_AWBURST;

assign m_axi_wr_0_AWCACHE = egress_U0_m_axi_wr_0_AWCACHE;

assign m_axi_wr_0_AWID = egress_U0_m_axi_wr_0_AWID;

assign m_axi_wr_0_AWLEN = egress_U0_m_axi_wr_0_AWLEN;

assign m_axi_wr_0_AWLOCK = egress_U0_m_axi_wr_0_AWLOCK;

assign m_axi_wr_0_AWPROT = egress_U0_m_axi_wr_0_AWPROT;

assign m_axi_wr_0_AWQOS = egress_U0_m_axi_wr_0_AWQOS;

assign m_axi_wr_0_AWREGION = egress_U0_m_axi_wr_0_AWREGION;

assign m_axi_wr_0_AWSIZE = egress_U0_m_axi_wr_0_AWSIZE;

assign m_axi_wr_0_AWUSER = egress_U0_m_axi_wr_0_AWUSER;

assign m_axi_wr_0_AWVALID = egress_U0_m_axi_wr_0_AWVALID;

assign m_axi_wr_0_BREADY = egress_U0_m_axi_wr_0_BREADY;

assign m_axi_wr_0_RREADY = 1'b0;

assign m_axi_wr_0_WDATA = egress_U0_m_axi_wr_0_WDATA;

assign m_axi_wr_0_WID = egress_U0_m_axi_wr_0_WID;

assign m_axi_wr_0_WLAST = egress_U0_m_axi_wr_0_WLAST;

assign m_axi_wr_0_WSTRB = egress_U0_m_axi_wr_0_WSTRB;

assign m_axi_wr_0_WUSER = egress_U0_m_axi_wr_0_WUSER;

assign m_axi_wr_0_WVALID = egress_U0_m_axi_wr_0_WVALID;

assign m_axi_wr_1_ARADDR = 64'd0;

assign m_axi_wr_1_ARBURST = 2'd0;

assign m_axi_wr_1_ARCACHE = 4'd0;

assign m_axi_wr_1_ARID = 1'd0;

assign m_axi_wr_1_ARLEN = 32'd0;

assign m_axi_wr_1_ARLOCK = 2'd0;

assign m_axi_wr_1_ARPROT = 3'd0;

assign m_axi_wr_1_ARQOS = 4'd0;

assign m_axi_wr_1_ARREGION = 4'd0;

assign m_axi_wr_1_ARSIZE = 3'd0;

assign m_axi_wr_1_ARUSER = 1'd0;

assign m_axi_wr_1_ARVALID = 1'b0;

assign m_axi_wr_1_AWADDR = egress_1_U0_m_axi_wr_1_AWADDR;

assign m_axi_wr_1_AWBURST = egress_1_U0_m_axi_wr_1_AWBURST;

assign m_axi_wr_1_AWCACHE = egress_1_U0_m_axi_wr_1_AWCACHE;

assign m_axi_wr_1_AWID = egress_1_U0_m_axi_wr_1_AWID;

assign m_axi_wr_1_AWLEN = egress_1_U0_m_axi_wr_1_AWLEN;

assign m_axi_wr_1_AWLOCK = egress_1_U0_m_axi_wr_1_AWLOCK;

assign m_axi_wr_1_AWPROT = egress_1_U0_m_axi_wr_1_AWPROT;

assign m_axi_wr_1_AWQOS = egress_1_U0_m_axi_wr_1_AWQOS;

assign m_axi_wr_1_AWREGION = egress_1_U0_m_axi_wr_1_AWREGION;

assign m_axi_wr_1_AWSIZE = egress_1_U0_m_axi_wr_1_AWSIZE;

assign m_axi_wr_1_AWUSER = egress_1_U0_m_axi_wr_1_AWUSER;

assign m_axi_wr_1_AWVALID = egress_1_U0_m_axi_wr_1_AWVALID;

assign m_axi_wr_1_BREADY = egress_1_U0_m_axi_wr_1_BREADY;

assign m_axi_wr_1_RREADY = 1'b0;

assign m_axi_wr_1_WDATA = egress_1_U0_m_axi_wr_1_WDATA;

assign m_axi_wr_1_WID = egress_1_U0_m_axi_wr_1_WID;

assign m_axi_wr_1_WLAST = egress_1_U0_m_axi_wr_1_WLAST;

assign m_axi_wr_1_WSTRB = egress_1_U0_m_axi_wr_1_WSTRB;

assign m_axi_wr_1_WUSER = egress_1_U0_m_axi_wr_1_WUSER;

assign m_axi_wr_1_WVALID = egress_1_U0_m_axi_wr_1_WVALID;

endmodule //hash_controller_pass
