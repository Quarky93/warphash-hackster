<VitisHLS:BurstInfo>
    <burst group="BURST_VERBOSE_PASSED" fe_name="BurstInferredPassed" src_info="hash_controller/hash_controller.cpp:29:19" msg_id="214-116" msg_severity="INFO" msg_body="Sequential write of length 2 has been inferred" OldID="bb2.store.10, bb2.store.21," ID="scevgepseq" BundleName="wr_1" VarName="gmem" LoopLoc="hash_controller/hash_controller.cpp:29:19" LoopName="VITIS_LOOP_29_1" ParentFunc="egress(ap_uint&lt;256&gt;*, hls::stream&lt;hls::axis&lt;ap_uint&lt;512&gt;, 0ul, 0ul, 1ul&gt;, 0&gt;&amp;, int, bool, ap_uint&lt;512&gt;, hls::stream&lt;ap_uint&lt;32&gt;, 0&gt;&amp;)" Length="2" Direction="write"/>
    <burst group="BURST_VERBOSE_MISSED" fe_name="AccessInCondBranchMissed" src_info="hash_controller/hash_controller.cpp:29:19" msg_id="214-232" msg_severity="INFO" msg_body="Access call is in the conditional branch" resolution="214-232" ID="scevgepseq" BundleName="wr_1" VarName="gmem" LoopLoc="hash_controller/hash_controller.cpp:29:19" LoopName="VITIS_LOOP_29_1" ParentFunc="egress(ap_uint&lt;256&gt;*, hls::stream&lt;hls::axis&lt;ap_uint&lt;512&gt;, 0ul, 0ul, 1ul&gt;, 0&gt;&amp;, int, bool, ap_uint&lt;512&gt;, hls::stream&lt;ap_uint&lt;32&gt;, 0&gt;&amp;)"/>
    <burst group="BURST_VERBOSE_PASSED" fe_name="BurstInferredPassed" src_info="hash_controller/hash_controller.cpp:13:19" msg_id="214-116" msg_severity="INFO" msg_body="Sequential read of length 2 has been inferred" OldID="bb2.load.6, bb2.load.18," ID="scevgepseq" BundleName="rd_1" VarName="gmem" LoopLoc="hash_controller/hash_controller.cpp:13:19" LoopName="VITIS_LOOP_13_1" ParentFunc="ingress(hls::stream&lt;hls::axis&lt;ap_uint&lt;512&gt;, 0ul, 0ul, 1ul&gt;, 0&gt;&amp;, ap_uint&lt;256&gt; const*, int, bool, ap_uint&lt;512&gt;)" Length="2" Direction="read"/>
    <burst group="BURST_VERBOSE_MISSED" fe_name="NonByteSizeMemoryAccessMissed" src_info="/tools/Xilinx/Vitis_HLS/2021.2/common/technology/autopilot/ap_axi_sdata.h:303:21" msg_id="214-226" msg_severity="INFO" msg_body="Non byte size access is unsupported" resolution="214-226" ID="bb4.store.5" VarName="tmp.i" ParentFunc="ingress(hls::stream&lt;hls::axis&lt;ap_uint&lt;512&gt;, 0ul, 0ul, 1ul&gt;, 0&gt;&amp;, ap_uint&lt;256&gt; const*, int, bool, ap_uint&lt;512&gt;)"/>
    <burst group="BURST_VERBOSE_MISSED" fe_name="NonByteSizeMemoryAccessMissed" src_info="/tools/Xilinx/Vitis_HLS/2021.2/common/technology/autopilot/ap_axi_sdata.h:303:21" msg_id="214-226" msg_severity="INFO" msg_body="Non byte size access is unsupported" resolution="214-226" ID="bb4.store.6" VarName="tmp.i" ParentFunc="ingress(hls::stream&lt;hls::axis&lt;ap_uint&lt;512&gt;, 0ul, 0ul, 1ul&gt;, 0&gt;&amp;, ap_uint&lt;256&gt; const*, int, bool, ap_uint&lt;512&gt;)"/>
    <burst group="BURST_VERBOSE_MISSED" fe_name="NonByteSizeMemoryAccessMissed" src_info="/tools/Xilinx/Vitis_HLS/2021.2/common/technology/autopilot/ap_axi_sdata.h:303:21" msg_id="214-226" msg_severity="INFO" msg_body="Non byte size access is unsupported" resolution="214-226" ID="bb4.store.7" VarName="tmp.i" ParentFunc="ingress(hls::stream&lt;hls::axis&lt;ap_uint&lt;512&gt;, 0ul, 0ul, 1ul&gt;, 0&gt;&amp;, ap_uint&lt;256&gt; const*, int, bool, ap_uint&lt;512&gt;)"/>
    <burst group="BURST_VERBOSE_MISSED" fe_name="NonByteSizeMemoryAccessMissed" src_info="/tools/Xilinx/Vitis_HLS/2021.2/common/technology/autopilot/ap_axi_sdata.h:303:21" msg_id="214-226" msg_severity="INFO" msg_body="Non byte size access is unsupported" resolution="214-226" ID="bb4.store.8" VarName="tmp.i" ParentFunc="ingress(hls::stream&lt;hls::axis&lt;ap_uint&lt;512&gt;, 0ul, 0ul, 1ul&gt;, 0&gt;&amp;, ap_uint&lt;256&gt; const*, int, bool, ap_uint&lt;512&gt;)"/>
    <burst group="BURST_VERBOSE_MISSED" fe_name="AccessInCondBranchMissed" src_info="hash_controller/hash_controller.cpp:13:19" msg_id="214-232" msg_severity="INFO" msg_body="Access call is in the conditional branch" resolution="214-232" ID="scevgepseq" BundleName="rd_1" VarName="gmem" LoopLoc="hash_controller/hash_controller.cpp:13:19" LoopName="VITIS_LOOP_13_1" ParentFunc="ingress(hls::stream&lt;hls::axis&lt;ap_uint&lt;512&gt;, 0ul, 0ul, 1ul&gt;, 0&gt;&amp;, ap_uint&lt;256&gt; const*, int, bool, ap_uint&lt;512&gt;)"/>
    <burst group="BURST_VERBOSE_PASSED" fe_name="BurstInferredPassed" src_info="hash_controller/hash_controller.cpp:13:19" msg_id="214-116" msg_severity="INFO" msg_body="Sequential read of length 2 has been inferred" OldID="bb2.load.6, bb2.load.18," ID="scevgepseq" BundleName="rd_1" VarName="gmem" LoopLoc="hash_controller/hash_controller.cpp:13:19" LoopName="VITIS_LOOP_13_1" ParentFunc="ingress(hls::stream&lt;hls::axis&lt;ap_uint&lt;512&gt;, 0ul, 0ul, 1ul&gt;, 0&gt;&amp;, ap_uint&lt;256&gt; const*, int, bool, ap_uint&lt;512&gt;) (.31)" Length="2" Direction="read"/>
    <burst group="BURST_VERBOSE_MISSED" fe_name="NonByteSizeMemoryAccessMissed" src_info="/tools/Xilinx/Vitis_HLS/2021.2/common/technology/autopilot/ap_axi_sdata.h:303:21" msg_id="214-226" msg_severity="INFO" msg_body="Non byte size access is unsupported" resolution="214-226" ID="bb4.store.6" VarName="tmp.i" ParentFunc="ingress(hls::stream&lt;hls::axis&lt;ap_uint&lt;512&gt;, 0ul, 0ul, 1ul&gt;, 0&gt;&amp;, ap_uint&lt;256&gt; const*, int, bool, ap_uint&lt;512&gt;) (.31)"/>
    <burst group="BURST_VERBOSE_MISSED" fe_name="NonByteSizeMemoryAccessMissed" src_info="/tools/Xilinx/Vitis_HLS/2021.2/common/technology/autopilot/ap_axi_sdata.h:303:21" msg_id="214-226" msg_severity="INFO" msg_body="Non byte size access is unsupported" resolution="214-226" ID="bb4.store.7" VarName="tmp.i" ParentFunc="ingress(hls::stream&lt;hls::axis&lt;ap_uint&lt;512&gt;, 0ul, 0ul, 1ul&gt;, 0&gt;&amp;, ap_uint&lt;256&gt; const*, int, bool, ap_uint&lt;512&gt;) (.31)"/>
    <burst group="BURST_VERBOSE_MISSED" fe_name="NonByteSizeMemoryAccessMissed" src_info="/tools/Xilinx/Vitis_HLS/2021.2/common/technology/autopilot/ap_axi_sdata.h:303:21" msg_id="214-226" msg_severity="INFO" msg_body="Non byte size access is unsupported" resolution="214-226" ID="bb4.store.8" VarName="tmp.i" ParentFunc="ingress(hls::stream&lt;hls::axis&lt;ap_uint&lt;512&gt;, 0ul, 0ul, 1ul&gt;, 0&gt;&amp;, ap_uint&lt;256&gt; const*, int, bool, ap_uint&lt;512&gt;) (.31)"/>
    <burst group="BURST_VERBOSE_MISSED" fe_name="NonByteSizeMemoryAccessMissed" src_info="/tools/Xilinx/Vitis_HLS/2021.2/common/technology/autopilot/ap_axi_sdata.h:303:21" msg_id="214-226" msg_severity="INFO" msg_body="Non byte size access is unsupported" resolution="214-226" ID="bb4.store.9" VarName="tmp.i" ParentFunc="ingress(hls::stream&lt;hls::axis&lt;ap_uint&lt;512&gt;, 0ul, 0ul, 1ul&gt;, 0&gt;&amp;, ap_uint&lt;256&gt; const*, int, bool, ap_uint&lt;512&gt;) (.31)"/>
    <burst group="BURST_VERBOSE_MISSED" fe_name="AccessInCondBranchMissed" src_info="hash_controller/hash_controller.cpp:13:19" msg_id="214-232" msg_severity="INFO" msg_body="Access call is in the conditional branch" resolution="214-232" ID="scevgepseq" BundleName="rd_1" VarName="gmem" LoopLoc="hash_controller/hash_controller.cpp:13:19" LoopName="VITIS_LOOP_13_1" ParentFunc="ingress(hls::stream&lt;hls::axis&lt;ap_uint&lt;512&gt;, 0ul, 0ul, 1ul&gt;, 0&gt;&amp;, ap_uint&lt;256&gt; const*, int, bool, ap_uint&lt;512&gt;) (.31)"/>
    <burst group="BURST_VERBOSE_PASSED" fe_name="BurstInferredPassed" src_info="hash_controller/hash_controller.cpp:29:19" msg_id="214-116" msg_severity="INFO" msg_body="Sequential write of length 2 has been inferred" OldID="bb2.store.10, bb2.store.21," ID="scevgepseq" BundleName="wr_1" VarName="gmem" LoopLoc="hash_controller/hash_controller.cpp:29:19" LoopName="VITIS_LOOP_29_1" ParentFunc="egress(ap_uint&lt;256&gt;*, hls::stream&lt;hls::axis&lt;ap_uint&lt;512&gt;, 0ul, 0ul, 1ul&gt;, 0&gt;&amp;, int, bool, ap_uint&lt;512&gt;, hls::stream&lt;ap_uint&lt;32&gt;, 0&gt;&amp;) (.32)" Length="2" Direction="write"/>
    <burst group="BURST_VERBOSE_MISSED" fe_name="AccessInCondBranchMissed" src_info="hash_controller/hash_controller.cpp:29:19" msg_id="214-232" msg_severity="INFO" msg_body="Access call is in the conditional branch" resolution="214-232" ID="scevgepseq" BundleName="wr_1" VarName="gmem" LoopLoc="hash_controller/hash_controller.cpp:29:19" LoopName="VITIS_LOOP_29_1" ParentFunc="egress(ap_uint&lt;256&gt;*, hls::stream&lt;hls::axis&lt;ap_uint&lt;512&gt;, 0ul, 0ul, 1ul&gt;, 0&gt;&amp;, int, bool, ap_uint&lt;512&gt;, hls::stream&lt;ap_uint&lt;32&gt;, 0&gt;&amp;) (.32)"/>
    <burst group="BURST_VERBOSE_MISSED" fe_name="GreaterOrEqualThresholdMissed" src_info="hash_controller/hash_controller.cpp:35:3" msg_id="214-120" msg_severity="INFO" msg_body="Could not widen since the size of type 'i256' is greater than or equal to the max_widen_bitwidth threshold of '0'." ID="scevgepseq" BundleName="wr_1" VarName="gmem" ParentFunc="egress(ap_uint&lt;256&gt;*, hls::stream&lt;hls::axis&lt;ap_uint&lt;512&gt;, 0ul, 0ul, 1ul&gt;, 0&gt;&amp;, int, bool, ap_uint&lt;512&gt;, hls::stream&lt;ap_uint&lt;32&gt;, 0&gt;&amp;)"/>
    <burst group="BURST_VERBOSE_MISSED" fe_name="GreaterOrEqualThresholdMissed" src_info="/tools/Xilinx/Vitis_HLS/2021.2/common/technology/autopilot/ap_int_base.h:232:18" msg_id="214-120" msg_severity="INFO" msg_body="Could not widen since the size of type 'i256' is greater than or equal to the max_widen_bitwidth threshold of '0'." ID="scevgepseq" BundleName="rd_1" VarName="gmem" ParentFunc="ingress(hls::stream&lt;hls::axis&lt;ap_uint&lt;512&gt;, 0ul, 0ul, 1ul&gt;, 0&gt;&amp;, ap_uint&lt;256&gt; const*, int, bool, ap_uint&lt;512&gt;)"/>
    <burst group="BURST_VERBOSE_MISSED" fe_name="GreaterOrEqualThresholdMissed" src_info="/tools/Xilinx/Vitis_HLS/2021.2/common/technology/autopilot/ap_int_base.h:232:18" msg_id="214-120" msg_severity="INFO" msg_body="Could not widen since the size of type 'i256' is greater than or equal to the max_widen_bitwidth threshold of '0'." ID="scevgepseq" BundleName="rd_1" VarName="gmem" ParentFunc="ingress(hls::stream&lt;hls::axis&lt;ap_uint&lt;512&gt;, 0ul, 0ul, 1ul&gt;, 0&gt;&amp;, ap_uint&lt;256&gt; const*, int, bool, ap_uint&lt;512&gt;) (.31)"/>
    <burst group="BURST_VERBOSE_MISSED" fe_name="GreaterOrEqualThresholdMissed" src_info="hash_controller/hash_controller.cpp:35:3" msg_id="214-120" msg_severity="INFO" msg_body="Could not widen since the size of type 'i256' is greater than or equal to the max_widen_bitwidth threshold of '0'." ID="scevgepseq" BundleName="wr_1" VarName="gmem" ParentFunc="egress(ap_uint&lt;256&gt;*, hls::stream&lt;hls::axis&lt;ap_uint&lt;512&gt;, 0ul, 0ul, 1ul&gt;, 0&gt;&amp;, int, bool, ap_uint&lt;512&gt;, hls::stream&lt;ap_uint&lt;32&gt;, 0&gt;&amp;) (.32)"/>
    <burst group="BURST_SUMMARY" fe_name="BurstInferredSummaryPassed" src_info="hash_controller/hash_controller.cpp:17:24" msg_id="214-115" msg_severity="INFO" msg_body="Multiple burst reads of length 2 and bit width 256 has been inferred on bundle 'rd_0'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings." BundleName="rd_0" Length="2" Width="256" Direction="read"/>
    <burst group="BURST_SUMMARY" fe_name="BurstInferredSummaryPassed" src_info="hash_controller/hash_controller.cpp:17:24" msg_id="214-115" msg_severity="INFO" msg_body="Multiple burst reads of length 2 and bit width 256 has been inferred on bundle 'rd_1'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings." BundleName="rd_1" Length="2" Width="256" Direction="read"/>
    <burst group="BURST_SUMMARY" fe_name="BurstInferredSummaryPassed" src_info="hash_controller/hash_controller.cpp:35:3" msg_id="214-115" msg_severity="INFO" msg_body="Multiple burst writes of length 2 and bit width 256 has been inferred on bundle 'wr_0'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings." BundleName="wr_0" Length="2" Width="256" Direction="write"/>
    <burst group="BURST_SUMMARY" fe_name="BurstInferredSummaryPassed" src_info="hash_controller/hash_controller.cpp:35:3" msg_id="214-115" msg_severity="INFO" msg_body="Multiple burst writes of length 2 and bit width 256 has been inferred on bundle 'wr_1'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings." BundleName="wr_1" Length="2" Width="256" Direction="write"/>
</VitisHLS:BurstInfo>

